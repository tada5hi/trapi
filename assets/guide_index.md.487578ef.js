import{_ as e,c as t,o as a,a as r}from"./app.6dc2b141.js";const _=JSON.parse('{"title":"What is it?","description":"","frontmatter":{},"headers":[{"level":2,"title":"Packages","slug":"packages","link":"#packages","children":[]}],"relativePath":"guide/index.md"}'),o={name:"guide/index.md"},i=r('<h1 id="what-is-it" tabindex="-1">What is it? <a class="header-anchor" href="#what-is-it" aria-hidden="true">#</a></h1><p><strong>T</strong>ypeScript <strong>R</strong>est <strong>API</strong> is a collection of packages to create/generate:</p><ul><li>Metadata for REST-APIs</li><li>Swagger documentation</li></ul><div class="warning custom-block"><p class="custom-block-title"><strong>Important NOTE</strong></p><p>The guide is under construction \u2602 at the moment. So please stay patient or contribute to it, till it covers all parts \u2B50.</p></div><h2 id="packages" tabindex="-1">Packages <a class="header-anchor" href="#packages" aria-hidden="true">#</a></h2><ul><li><strong>@trapi/decorator</strong>: A package to map and manage (self or third-party defined) decorators and resolve (node-) types.</li><li><strong>@trapi/metadata</strong>: A package for generating metadata information by analyzing present decorators. The metadata can than be used for generating a documentation according to the OpenAPI Specification or to create route schema/handling for libraries like: express, koa, etc.</li><li><strong>@trapi/swagger</strong>: A package to generate a fully featured documentation according the OpenAPI Specification from given metadata.</li></ul>',6),n=[i];function s(c,d,l,g,p,h){return a(),t("div",null,n)}const m=e(o,[["render",s]]);export{_ as __pageData,m as default};
